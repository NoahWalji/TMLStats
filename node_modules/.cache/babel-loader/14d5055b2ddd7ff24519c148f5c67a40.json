{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/TMLStats/src/components/HomePage/Home.js\";\nimport React from \"react\";\nimport '../../index.css';\nimport axios from 'axios';\nimport PlayerGroup from \"./PlayerGroup.js\";\nimport Game from \"./Game.js\";\nimport DivisionStandings from \"./DivisionStandings.js\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      teams: [],\n      forwards: [],\n      defense: [],\n      goalie: [],\n      game: [],\n      liveGame: false,\n      timeLeft: \"\",\n      awayTeam: [],\n      awayTeamScore: [],\n      homeTeam: [],\n      homeTeamScore: [],\n      subText: [],\n      loaded: false,\n      awayTeamStat: [],\n      homeTeamStat: []\n    };\n  }\n\n  async componentDidMount() {\n    const headers = {\n      'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n    };\n    const divisionURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=2,12,13,14,21,23,24\";\n    const forwardURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=LW,RW,C\";\n    const defenseURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=D\";\n    const goalieURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=G\";\n    const gameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\";\n    trackPromise(axios.get(divisionURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        teams: res.data.teams\n      });\n    }), axios.get(forwardURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        forwards: res.data.playerStatsTotals\n      });\n    }), axios.get(defenseURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        defense: res.data.playerStatsTotals\n      });\n    }), axios.get(goalieURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        goalie: res.data.playerStatsTotals\n      });\n    }), axios.get(gameURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        game: res.data.games[0]\n      });\n\n      if (this.state.game.schedule.playedStatus === \"LIVE\") {\n        const liveGameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games/\" + this.state.game.schedule.id + \"/boxscore.json\";\n        axios.get(liveGameURL, {\n          headers: headers\n        }).then(res => {\n          this.setState({\n            game: res.data,\n            liveGame: true\n          });\n          this.setState({\n            timeLeft: this.state.game.scoring.currentPeriodSecondsRemaining\n          });\n          var minutes = Math.floor(this.state.timeLeft / 60);\n          var seconds = this.state.timeLeft % 60;\n          this.setState({\n            awayTeam: this.state.game.game.awayTeam,\n            awayTeamScore: this.state.game.scoring.awayScoreTotal,\n            homeTeam: this.state.game.game.homeTeam,\n            homeTeamScore: this.state.game.scoring.homeScoreTotal,\n            subText: \"P\" + this.state.game.scoring.currentPeriod + \" (\" + minutes + \":\" + seconds + \")\"\n          });\n          this.getTeamData(headers);\n        });\n      } else {\n        let date = new Date(this.state.game.schedule.startTime);\n        let options = {\n          weekday: 'long',\n          month: 'long',\n          day: 'numeric',\n          hour: 'numeric',\n          minute: '2-digit'\n        };\n        this.setState({\n          awayTeam: this.state.game.schedule.awayTeam,\n          awayTeamScore: this.state.game.score.awayScoreTotal,\n          homeTeam: this.state.game.schedule.homeTeam,\n          homeTeamScore: this.state.game.score.homeScoreTotal,\n          subText: date.toLocaleString('en-US', options)\n        });\n        this.getTeamData(headers);\n        console.log(date.getTime());\n      }\n    })).then(res => {\n      this.setState({\n        loaded: true\n      });\n    });\n  }\n\n  fixSubText(date) {\n    const today = new Date();\n    const tommorow = new Date(today);\n    tommorow.setDate(tommorw.getDate() + 1);\n\n    if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()) {}\n  }\n\n  getTeamData(headers) {\n    const awayTeamURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=\" + this.state.awayTeam.id;\n    const homeTeamURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=\" + this.state.homeTeam.id;\n    axios.get(awayTeamURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        awayTeamStat: {\n          wins: res.data.teams[0].stats.standings.wins,\n          losses: res.data.teams[0].stats.standings.losses,\n          otLosses: res.data.teams[0].stats.standings.overtimeLosses\n        }\n      });\n    });\n    axios.get(homeTeamURL, {\n      headers: headers\n    }).then(res => {\n      this.setState({\n        homeTeamStat: {\n          wins: res.data.teams[0].stats.standings.wins,\n          losses: res.data.teams[0].stats.standings.losses,\n          otLosses: res.data.teams[0].stats.standings.overtimeLosses\n        }\n      });\n    });\n  }\n\n  render() {\n    if (this.state.loaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Game, {\n          loaded: this.state.loaded,\n          liveGame: this.state.liveGame,\n          nextGame: this.state.game,\n          awayTeam: this.state.awayTeam,\n          awayTeamScore: this.state.awayTeamScore,\n          homeTeam: this.state.homeTeam,\n          homeTeamScore: this.state.homeTeamScore,\n          subText: this.state.subText,\n          awayTeamStat: this.state.awayTeamStat,\n          homeTeamStat: this.state.homeTeamStat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DivisionStandings, {\n          loaded: this.state.loaded,\n          teams: this.state.teams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n          loaded: this.state.loaded,\n          position: \"LW,RW,C\",\n          players: this.state.forwards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n          loaded: this.state.loaded,\n          position: \"D\",\n          players: this.state.defense\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n          loaded: this.state.loaded,\n          position: \"G\",\n          players: this.state.goalie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/noahwalji/TMLStats/src/components/HomePage/Home.js"],"names":["React","axios","PlayerGroup","Game","DivisionStandings","trackPromise","Home","Component","constructor","props","state","teams","forwards","defense","goalie","game","liveGame","timeLeft","awayTeam","awayTeamScore","homeTeam","homeTeamScore","subText","loaded","awayTeamStat","homeTeamStat","componentDidMount","headers","btoa","divisionURL","forwardURL","defenseURL","goalieURL","gameURL","get","then","res","setState","data","playerStatsTotals","games","schedule","playedStatus","liveGameURL","id","scoring","currentPeriodSecondsRemaining","minutes","Math","floor","seconds","awayScoreTotal","homeScoreTotal","currentPeriod","getTeamData","date","Date","startTime","options","weekday","month","day","hour","minute","score","toLocaleString","console","log","getTime","fixSubText","today","tommorow","setDate","tommorw","getDate","getMonth","getFullYear","awayTeamURL","homeTeamURL","wins","stats","standings","losses","otLosses","overtimeLosses","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport '../../index.css'\nimport axios from 'axios';\n\nimport PlayerGroup from \"./PlayerGroup.js\"\nimport Game from \"./Game.js\"\nimport DivisionStandings from \"./DivisionStandings.js\"\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Home extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            teams: [],\n            forwards: [],\n            defense: [],\n            goalie: [],\n            game: [],\n            liveGame: false,\n            timeLeft: \"\",\n            awayTeam: [],\n            awayTeamScore: [],\n            homeTeam: [],\n            homeTeamScore: [],\n            subText: [],\n            loaded: false,\n            awayTeamStat: [],\n            homeTeamStat: [],\n        }\n    }\n\n    \n    async componentDidMount() {\n        const headers = {'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')}\n        const divisionURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=2,12,13,14,21,23,24\";\n        const forwardURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=LW,RW,C\"\n        const defenseURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=D\"\n        const goalieURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=G\"\n        const gameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\"\n\n        trackPromise(\n        axios.get(divisionURL, {headers: headers}).then(res => {this.setState({teams: res.data.teams})}),\n        axios.get(forwardURL, {headers: headers}).then(res => {this.setState({forwards: res.data.playerStatsTotals})}),\n        axios.get(defenseURL, {headers: headers}).then(res => {this.setState({defense: res.data.playerStatsTotals})}),\n        axios.get(goalieURL, {headers: headers}).then(res => {this.setState({goalie: res.data.playerStatsTotals})}),\n        axios.get(gameURL, {headers: headers}).then(res => {\n            this.setState({game: res.data.games[0]})\n            if (this.state.game.schedule.playedStatus === \"LIVE\") {\n                const liveGameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games/\" + this.state.game.schedule.id + \"/boxscore.json\";\n                axios.get(liveGameURL, {headers: headers}).then(res=> {\n                    this.setState({game: res.data, liveGame: true})\n                    this.setState({timeLeft: this.state.game.scoring.currentPeriodSecondsRemaining})\n                    var minutes = Math.floor(this.state.timeLeft/60);\n                    var seconds = this.state.timeLeft % 60;\n                    this.setState({\n                        awayTeam: this.state.game.game.awayTeam,\n                        awayTeamScore: this.state.game.scoring.awayScoreTotal,\n                        homeTeam: this.state.game.game.homeTeam,\n                        homeTeamScore: this.state.game.scoring.homeScoreTotal,\n                        subText: \"P\" + this.state.game.scoring.currentPeriod + \" (\" + minutes + \":\" + seconds + \")\"\n                    })\n                    this.getTeamData(headers)\n                })\n\n            }\n    \n            else {\n                let date = new Date(this.state.game.schedule.startTime)\n                let options = { weekday: 'long', month: 'long', day: 'numeric', hour: 'numeric', minute: '2-digit'};\n                this.setState({\n                    awayTeam: this.state.game.schedule.awayTeam,\n                    awayTeamScore: this.state.game.score.awayScoreTotal,\n                    homeTeam: this.state.game.schedule.homeTeam,\n                    homeTeamScore: this.state.game.score.homeScoreTotal,\n                    subText: date.toLocaleString('en-US', options)\n                })\n                this.getTeamData(headers)\n                console.log(date.getTime());\n    \n            }\n            \n        }),\n        ).then(res => {this.setState({loaded: true})})\n\n\n\n        \n\n    }\n\n    fixSubText(date) {\n        const today = new Date();\n        const tommorow = new Date(today);\n        tommorow.setDate(tommorw.getDate() + 1);\n\n        if (date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()) {\n\n        }\n    }\n\n    getTeamData(headers) {\n        const awayTeamURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=\"+this.state.awayTeam.id;\n        const homeTeamURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=\"+this.state.homeTeam.id;\n\n        axios.get(awayTeamURL, {headers: headers}).then(res => {\n           this.setState({\n               awayTeamStat: {wins: res.data.teams[0].stats.standings.wins, losses: res.data.teams[0].stats.standings.losses, otLosses: res.data.teams[0].stats.standings.overtimeLosses}\n           });\n        })\n        axios.get(homeTeamURL, {headers: headers}).then(res => {\n           this.setState({\n               homeTeamStat: {wins: res.data.teams[0].stats.standings.wins, losses: res.data.teams[0].stats.standings.losses, otLosses: res.data.teams[0].stats.standings.overtimeLosses}\n           });\n        })\n    }\n\n    render() {\n\n        if (this.state.loaded) {\n            return (\n                <div>\n                    <Game loaded={this.state.loaded} liveGame={this.state.liveGame} nextGame={this.state.game} awayTeam={this.state.awayTeam} awayTeamScore={this.state.awayTeamScore}\n                    homeTeam={this.state.homeTeam} homeTeamScore={this.state.homeTeamScore} subText={this.state.subText} awayTeamStat={this.state.awayTeamStat} homeTeamStat={this.state.homeTeamStat}/>\n                    <DivisionStandings loaded={this.state.loaded}  teams={this.state.teams}/>\n                    <PlayerGroup loaded={this.state.loaded}  position=\"LW,RW,C\" players={this.state.forwards}/>\n                    <PlayerGroup loaded={this.state.loaded}  position=\"D\" players={this.state.defense}/>\n                    <PlayerGroup loaded={this.state.loaded}  position=\"G\" players={this.state.goalie}/>\n                </div>\n            );\n        }\n\n        else {\n            return(<div></div>)\n        }\n\n        }\n}\n  export default Home"]},"metadata":{},"sourceType":"module"}