{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/PlayerDetails.js\";\nimport React from \"react\";\nimport './index.css';\nimport PlayerStatsTable from \"./PlayerStatsTable.js\";\nimport GoalieStatsTable from \"./GoalieStatsTable.js\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayerDetails extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isLoaded: false,\n      playerInfo: [],\n      playerStats: [],\n      playerShoots: null,\n      playerScoring: [],\n      playerSkating: [],\n      playerPenalties: [],\n      goalieStats: [],\n      injuryStatus: null\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      id\n    } = this.props.match.params;\n    const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?player=\" + id;\n    trackPromise(fetch(url, {\n      headers: new Headers({\n        'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n      })\n    }).then(res => res.json()).then(data => {\n      this.setState({\n        playerInfo: data.playerStatsTotals[0].player,\n        playerStats: data.playerStatsTotals[0].stats\n      });\n      this.setState({\n        playerShoots: this.state.playerInfo.handedness.shoots,\n        playerScoring: this.state.playerStats.scoring,\n        playerSkating: this.state.playerStats.skating,\n        playerPenalties: this.state.playerStats.penalties,\n        goalieStats: this.state.playerStats.goaltending,\n        injuryStatus: this.state.playerInfo.currentInjury,\n        isLoaded: true\n      });\n    }));\n  }\n\n  render() {\n    if (isLoaded) {\n      let player = this.state.playerInfo;\n      let stats = this.state.playerStats;\n      let scoring = this.state.playerScoring;\n      let skating = this.state.playerSkating;\n      let penalities = this.state.playerPenalties;\n      let goalie = this.state.goalieStats;\n      let table;\n      let shoots;\n      let injury = this.state.injuryStatus;\n\n      if (player.primaryPosition === 'G') {\n        table = /*#__PURE__*/_jsxDEV(GoalieStatsTable, {\n          position: player.primaryPosition,\n          stats: stats,\n          goalie: goalie,\n          skating: skating,\n          penalities: penalities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      } else {\n        table = /*#__PURE__*/_jsxDEV(PlayerStatsTable, {\n          position: player.primaryPosition,\n          stats: stats,\n          scoring: scoring,\n          skating: skating,\n          penalities: penalities\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this);\n        shoots = /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Shoots: \", this.state.playerShoots]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 26\n        }, this);\n      }\n\n      if (injury !== null) {\n        injury = \"Injuried: \" + injury.description.charAt(0).toUpperCase() + injury.description.slice(1);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.officialImageSrc,\n          alt: \"\",\n          className: \"details-img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"details-title\",\n          children: [player.firstName, \" \", player.lastName, \" (#\", player.jerseyNumber, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"details-title\",\n          children: [player.primaryPosition, \" | \", player.height, \" | \", player.weight, \" lb\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Born: \", player.birthDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Birthplace: \", player.birthCity, \", \", player.birthCountry]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), shoots, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: injury\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), table]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 20\n      }, this);\n    }\n  }\n\n}\n\nexport default PlayerDetails;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/PlayerDetails.js"],"names":["React","PlayerStatsTable","GoalieStatsTable","trackPromise","PlayerDetails","Component","constructor","props","state","isLoaded","playerInfo","playerStats","playerShoots","playerScoring","playerSkating","playerPenalties","goalieStats","injuryStatus","componentDidMount","id","match","params","url","fetch","headers","Headers","btoa","then","res","json","data","setState","playerStatsTotals","player","stats","handedness","shoots","scoring","skating","penalties","goaltending","currentInjury","render","penalities","goalie","table","injury","primaryPosition","description","charAt","toUpperCase","slice","officialImageSrc","firstName","lastName","jerseyNumber","height","weight","birthDate","birthCity","birthCountry"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './index.css'\nimport PlayerStatsTable from \"./PlayerStatsTable.js\"\nimport GoalieStatsTable from \"./GoalieStatsTable.js\"\n\nimport { trackPromise } from 'react-promise-tracker';\n\n\nclass PlayerDetails extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            isLoaded: false,\n            playerInfo: [],\n            playerStats: [],\n            playerShoots: null,\n            playerScoring: [],\n            playerSkating: [],\n            playerPenalties: [],\n            goalieStats: [],\n            injuryStatus: null,\n        }\n    }\n\n    async componentDidMount() {\n        let { id } = this.props.match.params\n        const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?player=\" + id;\n\n        trackPromise(\n            fetch(url, { \n                headers: new Headers({\n                  'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS'), \n                }), \n            })\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    this.setState({\n                        playerInfo: data.playerStatsTotals[0].player,\n                        playerStats: data.playerStatsTotals[0].stats\n                    });\n                    this.setState({\n                        playerShoots: this.state.playerInfo.handedness.shoots,\n                        playerScoring: this.state.playerStats.scoring,\n                        playerSkating: this.state.playerStats.skating,\n                        playerPenalties: this.state.playerStats.penalties,\n                        goalieStats: this.state.playerStats.goaltending,\n                        injuryStatus: this.state.playerInfo.currentInjury,\n                        isLoaded: true\n                    })\n                }\n            )\n        )\n    }\n\n    render() {\n\n        if (isLoaded) {\n            let player = this.state.playerInfo\n            let stats = this.state.playerStats\n            let scoring = this.state.playerScoring\n            let skating = this.state.playerSkating\n            let penalities = this.state.playerPenalties\n            let goalie = this.state.goalieStats\n            let table;\n            let shoots;\n            let injury = this.state.injuryStatus;\n\n            if (player.primaryPosition === 'G') {\n                table = <GoalieStatsTable position={player.primaryPosition} stats={stats} goalie={goalie} skating={skating} penalities={penalities}/>\n            }\n\n            else {\n                table = <PlayerStatsTable position={player.primaryPosition} stats={stats} scoring={scoring} skating={skating} penalities={penalities}/>\n                shoots = <p>Shoots: {this.state.playerShoots}</p>\n            }\n\n            if (injury !== null) {\n                injury = \"Injuried: \" + injury.description.charAt(0).toUpperCase() + injury.description.slice(1);\n            }\n\n            return (\n                <div className=\"player-container\">\n                    <img src={player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.officialImageSrc} alt=\"\"\n                    className=\"details-img\"/>\n                    <p className=\"details-title\">{player.firstName} {player.lastName} (#{player.jerseyNumber})</p>\n                    <p className=\"details-title\">{player.primaryPosition} | {player.height} | {player.weight} lb</p>\n\n                    <p>Born: {player.birthDate}</p>\n                    <p>Birthplace: {player.birthCity}, {player.birthCountry}</p>\n                    {shoots}\n                    <p>{injury}</p>\n                    {table}\n                    \n\n                    \n                </div>\n            )\n        }\n        else {\n            return <div></div>\n        }\n        \n      }\n\n\n\n}\n\n  export default PlayerDetails"]},"metadata":{},"sourceType":"module"}