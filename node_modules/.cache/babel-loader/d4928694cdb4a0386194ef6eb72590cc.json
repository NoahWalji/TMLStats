{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/Home.js\";\nimport React from \"react\";\nimport './index.css';\nimport axios from 'axios';\nimport PlayerGroup from \"./PlayerGroup.js\";\nimport Game from \"./Game.js\";\nimport DivisionStandings from \"./DivisionStandings.js\";\nimport Loading from \"./Loading.js\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      teams: [],\n      forwards: [],\n      defense: [],\n      goalie: [],\n      game: [],\n      liveGame: false,\n      timeLeft: \"\",\n      awayTeam: [],\n      awayTeamScore: [],\n      homeTeam: [],\n      homeTeamScore: [],\n      subText: []\n    };\n  }\n\n  async componentDidMount() {\n    const headers = {\n      'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n    };\n    const divisionURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=2,12,13,14,21,23,24\";\n    const forwardURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=LW,RW,C\";\n    const defenseURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=D\";\n    const goalieURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=G\";\n    const gameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\";\n    const [divisionResponse, forwardResponse, defenseResponse, goalieResponse, gameResponse] = [axios.get(divisionURL, {\n      headers: headers\n    }), axios.get(forwardURL, {\n      headers: headers\n    }), axios.get(defenseURL, {\n      headers: headers\n    }), axios.get(goalieURL, {\n      headers: headers\n    }), axios.get(gameURL, {\n      headers: headers\n    })];\n    trackPromise(this.setState({\n      teams: divisionResponse.data.teams,\n      forwards: forwardResponse.data.playerStatsTotals,\n      defense: defenseResponse.data.playerStatsTotals,\n      goalie: goalieResponse.data.playerStatsTotals,\n      game: gameResponse.data.games[0]\n    }));\n\n    if (this.state.game.schedule.playedStatus === \"LIVE\") {\n      const liveGameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games/\" + this.state.game.games[0].schedule.id + \"/boxscore.json\";\n      const liveGameResponse = await axios.get(liveGameURL, {\n        headers: headers\n      });\n      this.setState({\n        game: liveGameResponse.data,\n        liveGame: true,\n        timeLeft: this.state.game.scoring.currentPeriodSecondsRemaining\n      });\n      var minutes = Math.floor(this.state.timeLeft / 60);\n      var seconds = this.state.timeLeft % 60;\n      this.setState({\n        awayTeam: this.state.game.game.awayTeam,\n        awayTeamScore: this.state.game.scoring.awayScoreTotal,\n        homeTeam: this.state.game.game.homeTeam,\n        homeTeamScore: this.state.game.scoring.homeScoreTotal,\n        subText: \"P\" + this.state.game.scoring.currentPeriod + \" (\" + minutes + \":\" + seconds + \")\"\n      });\n    } else {\n      let date = new Date(this.state.game.schedule.startTime);\n      let options = {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit'\n      };\n      this.setState({\n        awayTeam: this.state.game.schedule.awayTeam,\n        awayTeamScore: this.state.game.score.awayScoreTotal,\n        homeTeam: this.state.game.schedule.homeTeam,\n        homeTeamScore: this.state.game.score.homeScoreTotal,\n        subText: date.toLocaleString('en-US', options)\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Game, {\n        liveGame: this.state.liveGame,\n        nextGame: this.state.game,\n        awayTeam: this.state.awayTeam,\n        awayTeamScore: this.state.awayTeamScore,\n        homeTeam: this.state.homeTeam,\n        homeTeamScore: this.state.homeTeamScore,\n        subText: this.state.subText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DivisionStandings, {\n        teams: this.state.teams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n        position: \"LW,RW,C\",\n        players: this.state.forwards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n        position: \"D\",\n        players: this.state.defense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n        position: \"G\",\n        players: this.state.goalie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/Home.js"],"names":["React","axios","PlayerGroup","Game","DivisionStandings","Loading","trackPromise","Home","Component","constructor","props","state","teams","forwards","defense","goalie","game","liveGame","timeLeft","awayTeam","awayTeamScore","homeTeam","homeTeamScore","subText","componentDidMount","headers","btoa","divisionURL","forwardURL","defenseURL","goalieURL","gameURL","divisionResponse","forwardResponse","defenseResponse","goalieResponse","gameResponse","get","setState","data","playerStatsTotals","games","schedule","playedStatus","liveGameURL","id","liveGameResponse","scoring","currentPeriodSecondsRemaining","minutes","Math","floor","seconds","awayScoreTotal","homeScoreTotal","currentPeriod","date","Date","startTime","options","weekday","month","day","hour","minute","score","toLocaleString","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,YAAT,QAA6B,uBAA7B;;;AAEA,MAAMC,IAAN,SAAmBP,KAAK,CAACQ,SAAzB,CAAmC;AAG/BC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,MAAM,EAAE,EAJC;AAKTC,MAAAA,IAAI,EAAE,EALG;AAMTC,MAAAA,QAAQ,EAAE,KAND;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,QAAQ,EAAE,EARD;AASTC,MAAAA,aAAa,EAAE,EATN;AAUTC,MAAAA,QAAQ,EAAE,EAVD;AAWTC,MAAAA,aAAa,EAAE,EAXN;AAYTC,MAAAA,OAAO,EAAE;AAZA,KAAb;AAcH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,OAAO,GAAG;AAAC,uBAAiB,WAASC,IAAI,CAAC,8CAAD;AAA/B,KAAhB;AACA,UAAMC,WAAW,GAAG,kGAApB;AACA,UAAMC,UAAU,GAAG,wIAAnB;AACA,UAAMC,UAAU,GAAG,kIAAnB;AACA,UAAMC,SAAS,GAAG,kIAAlB;AACA,UAAMC,OAAO,GAAG,qGAAhB;AAEA,UAAM,CAACC,gBAAD,EAAmBC,eAAnB,EAAoCC,eAApC,EAAqDC,cAArD,EAAqEC,YAArE,IAAsF,CACxFnC,KAAK,CAACoC,GAAN,CAAUV,WAAV,EAAuB;AAACF,MAAAA,OAAO,EAAEA;AAAV,KAAvB,CADwF,EAExFxB,KAAK,CAACoC,GAAN,CAAUT,UAAV,EAAsB;AAACH,MAAAA,OAAO,EAAEA;AAAV,KAAtB,CAFwF,EAGxFxB,KAAK,CAACoC,GAAN,CAAUR,UAAV,EAAsB;AAACJ,MAAAA,OAAO,EAAEA;AAAV,KAAtB,CAHwF,EAIxFxB,KAAK,CAACoC,GAAN,CAAUP,SAAV,EAAqB;AAACL,MAAAA,OAAO,EAAEA;AAAV,KAArB,CAJwF,EAKxFxB,KAAK,CAACoC,GAAN,CAAUN,OAAV,EAAmB;AAACN,MAAAA,OAAO,EAAEA;AAAV,KAAnB,CALwF,CAA5F;AAQAnB,IAAAA,YAAY,CACZ,KAAKgC,QAAL,CAAc;AACV1B,MAAAA,KAAK,EAAEoB,gBAAgB,CAACO,IAAjB,CAAsB3B,KADnB;AAEVC,MAAAA,QAAQ,EAAEoB,eAAe,CAACM,IAAhB,CAAqBC,iBAFrB;AAGV1B,MAAAA,OAAO,EAAEoB,eAAe,CAACK,IAAhB,CAAqBC,iBAHpB;AAIVzB,MAAAA,MAAM,EAAEoB,cAAc,CAACI,IAAf,CAAoBC,iBAJlB;AAKVxB,MAAAA,IAAI,EAAEoB,YAAY,CAACG,IAAb,CAAkBE,KAAlB,CAAwB,CAAxB;AALI,KAAd,CADY,CAAZ;;AASA,QAAI,KAAK9B,KAAL,CAAWK,IAAX,CAAgB0B,QAAhB,CAAyBC,YAAzB,KAA0C,MAA9C,EAAsD;AAClD,YAAMC,WAAW,GAAG,+DAA+D,KAAKjC,KAAL,CAAWK,IAAX,CAAgByB,KAAhB,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkCG,EAAjG,GAAsG,gBAA1H;AACA,YAAMC,gBAAgB,GAAG,MAAM7C,KAAK,CAACoC,GAAN,CAAUO,WAAV,EAAuB;AAACnB,QAAAA,OAAO,EAAEA;AAAV,OAAvB,CAA/B;AACA,WAAKa,QAAL,CAAc;AAACtB,QAAAA,IAAI,EAAE8B,gBAAgB,CAACP,IAAxB;AAA8BtB,QAAAA,QAAQ,EAAE,IAAxC;AAA8CC,QAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWK,IAAX,CAAgB+B,OAAhB,CAAwBC;AAAhF,OAAd;AACA,UAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,KAAKxC,KAAL,CAAWO,QAAX,GAAoB,EAA/B,CAAd;AACA,UAAIkC,OAAO,GAAG,KAAKzC,KAAL,CAAWO,QAAX,GAAsB,EAApC;AACA,WAAKoB,QAAL,CAAc;AACVnB,QAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWK,IAAX,CAAgBA,IAAhB,CAAqBG,QADrB;AAEVC,QAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWK,IAAX,CAAgB+B,OAAhB,CAAwBM,cAF7B;AAGVhC,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWK,IAAX,CAAgBA,IAAhB,CAAqBK,QAHrB;AAIVC,QAAAA,aAAa,EAAE,KAAKX,KAAL,CAAWK,IAAX,CAAgB+B,OAAhB,CAAwBO,cAJ7B;AAKV/B,QAAAA,OAAO,EAAE,MAAM,KAAKZ,KAAL,CAAWK,IAAX,CAAgB+B,OAAhB,CAAwBQ,aAA9B,GAA8C,IAA9C,GAAqDN,OAArD,GAA+D,GAA/D,GAAqEG,OAArE,GAA+E;AAL9E,OAAd;AAQH,KAdD,MAgBK;AACD,UAAII,IAAI,GAAG,IAAIC,IAAJ,CAAS,KAAK9C,KAAL,CAAWK,IAAX,CAAgB0B,QAAhB,CAAyBgB,SAAlC,CAAX;AACA,UAAIC,OAAO,GAAG;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAkCC,QAAAA,GAAG,EAAE,SAAvC;AAAkDC,QAAAA,IAAI,EAAE,SAAxD;AAAmEC,QAAAA,MAAM,EAAE;AAA3E,OAAd;AACA,WAAK1B,QAAL,CAAc;AACVnB,QAAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWK,IAAX,CAAgB0B,QAAhB,CAAyBvB,QADzB;AAEVC,QAAAA,aAAa,EAAE,KAAKT,KAAL,CAAWK,IAAX,CAAgBiD,KAAhB,CAAsBZ,cAF3B;AAGVhC,QAAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWK,IAAX,CAAgB0B,QAAhB,CAAyBrB,QAHzB;AAIVC,QAAAA,aAAa,EAAE,KAAKX,KAAL,CAAWK,IAAX,CAAgBiD,KAAhB,CAAsBX,cAJ3B;AAKV/B,QAAAA,OAAO,EAAEiC,IAAI,CAACU,cAAL,CAAoB,OAApB,EAA6BP,OAA7B;AALC,OAAd;AAQH;AAGJ;;AAEDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKxD,KAAL,CAAWM,QAA3B;AAAqC,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWK,IAA1D;AAAgE,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWQ,QAArF;AAA+F,QAAA,aAAa,EAAE,KAAKR,KAAL,CAAWS,aAAzH;AACA,QAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWU,QADrB;AAC+B,QAAA,aAAa,EAAE,KAAKV,KAAL,CAAWW,aADzD;AACwE,QAAA,OAAO,EAAE,KAAKX,KAAL,CAAWY;AAD5F;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC;AAArC;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAC,SAAtB;AAAgC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE;AAApD;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAC,GAAtB;AAA0B,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWG;AAA9C;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI,QAAC,WAAD;AAAa,QAAA,QAAQ,EAAC,GAAtB;AAA0B,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWI;AAA9C;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWC;;AA1F0B;;AA4FjC,eAAeR,IAAf","sourcesContent":["import React from \"react\"\nimport './index.css'\nimport axios from 'axios';\n\nimport PlayerGroup from \"./PlayerGroup.js\"\nimport Game from \"./Game.js\"\nimport DivisionStandings from \"./DivisionStandings.js\"\nimport Loading from \"./Loading.js\"\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Home extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            teams: [],\n            forwards: [],\n            defense: [],\n            goalie: [],\n            game: [],\n            liveGame: false,\n            timeLeft: \"\",\n            awayTeam: [],\n            awayTeamScore: [],\n            homeTeam: [],\n            homeTeamScore: [],\n            subText: []\n        }\n    }\n    \n    async componentDidMount() {\n        const headers = {'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')}\n        const divisionURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=2,12,13,14,21,23,24\";\n        const forwardURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=LW,RW,C\"\n        const defenseURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=D\"\n        const goalieURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=G\"\n        const gameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\"\n\n        const [divisionResponse, forwardResponse, defenseResponse, goalieResponse, gameResponse] = ([\n            axios.get(divisionURL, {headers: headers}),\n            axios.get(forwardURL, {headers: headers}),\n            axios.get(defenseURL, {headers: headers}),\n            axios.get(goalieURL, {headers: headers}),\n            axios.get(gameURL, {headers: headers})\n        ])\n\n        trackPromise(\n        this.setState({\n            teams: divisionResponse.data.teams,\n            forwards: forwardResponse.data.playerStatsTotals, \n            defense: defenseResponse.data.playerStatsTotals,    \n            goalie: goalieResponse.data.playerStatsTotals,\n            game: gameResponse.data.games[0]\n        }))\n\n        if (this.state.game.schedule.playedStatus === \"LIVE\") {\n            const liveGameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games/\" + this.state.game.games[0].schedule.id + \"/boxscore.json\";\n            const liveGameResponse = await axios.get(liveGameURL, {headers: headers});\n            this.setState({game: liveGameResponse.data, liveGame: true, timeLeft: this.state.game.scoring.currentPeriodSecondsRemaining})\n            var minutes = Math.floor(this.state.timeLeft/60);\n            var seconds = this.state.timeLeft % 60;\n            this.setState({\n                awayTeam: this.state.game.game.awayTeam,\n                awayTeamScore: this.state.game.scoring.awayScoreTotal,\n                homeTeam: this.state.game.game.homeTeam,\n                homeTeamScore: this.state.game.scoring.homeScoreTotal,\n                subText: \"P\" + this.state.game.scoring.currentPeriod + \" (\" + minutes + \":\" + seconds + \")\"\n\n            })\n        }\n\n        else {\n            let date = new Date(this.state.game.schedule.startTime)\n            let options = { weekday: 'long', month: 'long', day: 'numeric', hour: 'numeric', minute: '2-digit'};\n            this.setState({\n                awayTeam: this.state.game.schedule.awayTeam,\n                awayTeamScore: this.state.game.score.awayScoreTotal,\n                homeTeam: this.state.game.schedule.homeTeam,\n                homeTeamScore: this.state.game.score.homeScoreTotal,\n                subText: date.toLocaleString('en-US', options)\n            })\n\n        } \n        \n\n    }\n\n    render() {\n        return (\n            <div>\n                <Loading/>\n                <Game liveGame={this.state.liveGame} nextGame={this.state.game} awayTeam={this.state.awayTeam} awayTeamScore={this.state.awayTeamScore}\n                homeTeam={this.state.homeTeam} homeTeamScore={this.state.homeTeamScore} subText={this.state.subText}/>\n                <DivisionStandings teams={this.state.teams}/>\n                <PlayerGroup position=\"LW,RW,C\" players={this.state.forwards}/>\n                <PlayerGroup position=\"D\" players={this.state.defense}/>\n                <PlayerGroup position=\"G\" players={this.state.goalie}/>\n            </div>\n        );\n        }\n}\n  export default Home"]},"metadata":{},"sourceType":"module"}