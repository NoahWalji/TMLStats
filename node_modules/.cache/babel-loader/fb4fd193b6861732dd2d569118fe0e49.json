{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/Home.js\";\nimport React from \"react\";\nimport './index.css';\nimport axios from 'axios';\nimport PlayerGroup from \"./PlayerGroup.js\";\nimport Game from \"./Game.js\";\nimport DivisionStandings from \"./DivisionStandings.js\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      teams: [],\n      forwards: [],\n      defense: [],\n      goalie: [],\n      game: [],\n      liveGame: false\n    };\n  }\n\n  async componentDidMount() {\n    const headers = {\n      'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n    };\n    const divisionURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=2,12,13,14,21,23,24\";\n    const forwardURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=LW,RW,C\";\n    const defenseURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=D\";\n    const goalieURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=G\";\n    const gameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\";\n    const [divisionResponse, forwardResponse, defenseResponse, goalieResponse, gameResponse] = await Promise.all([axios.get(divisionURL, {\n      headers: headers\n    }), axios.get(forwardURL, {\n      headers: headers\n    }), axios.get(defenseURL, {\n      headers: headers\n    }), axios.get(goalieURL, {\n      headers: headers\n    }), axios.get(gameURL, {\n      headers: headers\n    })]);\n    this.setState({\n      teams: divisionResponse.data.teams,\n      forwards: forwardResponse.data.playerStatsTotals,\n      defense: defenseResponse.data.playerStatsTotals,\n      goalie: goalieResponse.data.playerStatsTotals,\n      game: gameResponse.data.games[0]\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(DivisionStandings, {\n        teams: this.state.teams\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n        position: \"LW,RW,C\",\n        players: this.state.forwards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n        position: \"D\",\n        players: this.state.defense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerGroup, {\n        position: \"G\",\n        players: this.state.goalie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/Home.js"],"names":["React","axios","PlayerGroup","Game","DivisionStandings","trackPromise","Home","Component","constructor","props","state","teams","forwards","defense","goalie","game","liveGame","componentDidMount","headers","btoa","divisionURL","forwardURL","defenseURL","goalieURL","gameURL","divisionResponse","forwardResponse","defenseResponse","goalieResponse","gameResponse","Promise","all","get","setState","data","playerStatsTotals","games","render"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './index.css'\nimport axios from 'axios';\n\nimport PlayerGroup from \"./PlayerGroup.js\"\nimport Game from \"./Game.js\"\nimport DivisionStandings from \"./DivisionStandings.js\"\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Home extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            teams: [],\n            forwards: [],\n            defense: [],\n            goalie: [],\n            game: [],\n            liveGame: false\n        }\n    }\n    \n    async componentDidMount() {\n        const headers = {'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')}\n        const divisionURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/2021-regular/standings.json?team=2,12,13,14,21,23,24\";\n        const forwardURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=LW,RW,C\"\n        const defenseURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=D\"\n        const goalieURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=G\"\n        const gameURL = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\"\n\n        const [divisionResponse, forwardResponse, defenseResponse, goalieResponse, gameResponse] = await Promise.all([\n            axios.get(divisionURL, {headers: headers}),\n            axios.get(forwardURL, {headers: headers}),\n            axios.get(defenseURL, {headers: headers}),\n            axios.get(goalieURL, {headers: headers}),\n            axios.get(gameURL, {headers: headers})\n        ])\n\n        this.setState({\n            teams: divisionResponse.data.teams,\n            forwards: forwardResponse.data.playerStatsTotals, \n            defense: defenseResponse.data.playerStatsTotals,    \n            goalie: goalieResponse.data.playerStatsTotals,\n            game: gameResponse.data.games[0]\n        })\n\n    }\n\n    render() {\n\n        return (\n            <div>\n                <DivisionStandings teams={this.state.teams}/>\n                <PlayerGroup position=\"LW,RW,C\" players={this.state.forwards}/>\n                <PlayerGroup position=\"D\" players={this.state.defense}/>\n                <PlayerGroup position=\"G\" players={this.state.goalie}/>\n            </div>\n        );\n        }\n}\n  export default Home"]},"metadata":{},"sourceType":"module"}