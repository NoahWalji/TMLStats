{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/Game.js\";\nimport React from \"react\";\nimport './index.css';\nimport Team from \"./Team.js\";\nimport { trackPromise } from 'react-promise-tracker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoaded: false,\n      nextGame: [],\n      awayTeam: [],\n      subText: null,\n      awayTeamScore: null,\n      homeTeam: [],\n      homeTeamScore: null\n    };\n  }\n\n  async componentDidMount() {\n    let url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\";\n    let response = await fetch(url, {\n      headers: new Headers({\n        'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n      })\n    });\n    let data = await response.json();\n\n    if (data.games[0].schedule.playedStatus === \"LIVE\") {\n      url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games/\" + data.games[0].schedule.id + \"/boxscore.json\";\n      response = await fetch(url, {\n        headers: new Headers({\n          'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n        })\n      });\n      data = await response.json();\n      this.setState({\n        nextGame: data\n      });\n      var timeLeft = this.state.nextGame.scoring.currentPeriodSecondsRemaining;\n      var minutes = Math.floor(timeLeft / 60);\n      var seconds = timeLeft % 60;\n      this.setState({\n        awayTeam: this.state.nextGame.game.awayTeam,\n        awayTeamScore: this.state.nextGame.scoring.awayScoreTotal,\n        homeTeam: this.state.nextGame.game.homeTeam,\n        homeTeamScore: this.state.nextGame.scoring.homeScoreTotal,\n        subText: \"P\" + this.state.nextGame.scoring.currentPeriod + \" (\" + minutes + \":\" + seconds + \")\",\n        isLoaded: true\n      });\n      this.getSubText();\n    } else {\n      this.setState({\n        nextGame: data.games[0]\n      });\n      let date = new Date(this.state.nextGame.schedule.startTime);\n      let options = {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        hour: 'numeric',\n        minute: '2-digit'\n      };\n      this.setState({\n        awayTeam: this.state.nextGame.schedule.awayTeam,\n        awayTeamScore: this.state.nextGame.score.awayScoreTotal,\n        homeTeam: this.state.nextGame.schedule.homeTeam,\n        homeTeamScore: this.state.nextGame.score.homeScoreTotal,\n        subText: date.toLocaleString('en-US', options),\n        isLoaded: true\n      });\n    }\n  }\n\n  getSubText() {\n    if (this.state.nextGame.scoring.currentPeriod === null) {\n      this.setState({\n        subText: \"Intermission\"\n      });\n    } else if (this.state.nextGame.scoring.currentPeriod > 3) {\n      this.setState({\n        subText: \"Period: Overtime\"\n      });\n    }\n\n    if (this.state.nextGame.game.playedStatus !== \"LIVE\") {\n      this.setState({\n        subText: \"Final Score\"\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [this.state.isLoaded && /*#__PURE__*/_jsxDEV(Team, {\n        type: \"awayTeam\",\n        id: this.state.awayTeam.id,\n        abbreviation: this.state.awayTeam.abbreviation,\n        score: this.state.awayTeamScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 42\n      }, this), this.state.isLoaded && /*#__PURE__*/_jsxDEV(Team, {\n        type: \"homeTeam\",\n        id: this.state.homeTeam.id,\n        abbreviation: this.state.homeTeam.abbreviation,\n        score: this.state.homeTeamScore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"subText\",\n        children: this.state.subText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/Noah/TMLStats 2.0/frontend/src/Game.js"],"names":["React","Team","trackPromise","Game","Component","constructor","props","state","isLoaded","nextGame","awayTeam","subText","awayTeamScore","homeTeam","homeTeamScore","componentDidMount","url","response","fetch","headers","Headers","btoa","data","json","games","schedule","playedStatus","id","setState","timeLeft","scoring","currentPeriodSecondsRemaining","minutes","Math","floor","seconds","game","awayScoreTotal","homeScoreTotal","currentPeriod","getSubText","date","Date","startTime","options","weekday","month","day","hour","minute","score","toLocaleString","render","abbreviation"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './index.css'\nimport Team from \"./Team.js\"\n\nimport { trackPromise } from 'react-promise-tracker';\n\nclass Game extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            isLoaded: false,\n            nextGame: [],\n            awayTeam: [],\n            subText: null,\n            awayTeamScore: null,\n            homeTeam: [],\n            homeTeamScore: null\n        }\n    }\n\n    async componentDidMount() {\n        let url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games.json?status=unplayed,in-progress&team=TOR\"\n        let response = await fetch(url, { \n            headers: new Headers({\n              'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS'), \n            }), \n        });\n        let data = await response.json();\n        if (data.games[0].schedule.playedStatus === \"LIVE\") {\n            url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/games/\" + data.games[0].schedule.id + \"/boxscore.json\"\n            response = await fetch(url, { \n                headers: new Headers({\n                  'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS'), \n                }), \n            });\n            data = await response.json();\n            this.setState({nextGame: data}) \n            var timeLeft = this.state.nextGame.scoring.currentPeriodSecondsRemaining; \n            var minutes = Math.floor(timeLeft/60);\n            var seconds = timeLeft % 60;\n            this.setState({\n                awayTeam: this.state.nextGame.game.awayTeam,\n                awayTeamScore: this.state.nextGame.scoring.awayScoreTotal,\n                homeTeam: this.state.nextGame.game.homeTeam,\n                homeTeamScore: this.state.nextGame.scoring.homeScoreTotal,\n                subText: \"P\" + this.state.nextGame.scoring.currentPeriod + \" (\" + minutes + \":\" + seconds + \")\",\n                isLoaded: true\n            }) \n            \n            this.getSubText()\n\n\n        }\n\n        else {\n            this.setState({nextGame: data.games[0]})\n            let date = new Date(this.state.nextGame.schedule.startTime)\n            let options = { weekday: 'long', month: 'long', day: 'numeric', hour: 'numeric', minute: '2-digit'};\n            this.setState({\n                awayTeam: this.state.nextGame.schedule.awayTeam,\n                awayTeamScore: this.state.nextGame.score.awayScoreTotal,\n                homeTeam: this.state.nextGame.schedule.homeTeam,\n                homeTeamScore: this.state.nextGame.score.homeScoreTotal,\n                subText: date.toLocaleString('en-US', options),\n                isLoaded: true\n            }) \n            \n        }    \n    }\n\n    getSubText() {\n        if (this.state.nextGame.scoring.currentPeriod === null) {\n            this.setState({subText: \"Intermission\"})\n        }\n\n        else if (this.state.nextGame.scoring.currentPeriod > 3) {\n            this.setState({subText: \"Period: Overtime\"})\n        }\n\n        if (this.state.nextGame.game.playedStatus !== \"LIVE\") {\n            this.setState({subText: \"Final Score\"})\n        }\n    }\n    \n    render() {\n\n        return (\n            <div className=\"game\">\n                {this.state.isLoaded && (<Team type=\"awayTeam\" id={this.state.awayTeam.id} abbreviation={this.state.awayTeam.abbreviation} score={this.state.awayTeamScore}/>)}\n                {this.state.isLoaded && (<Team type=\"homeTeam\" id={this.state.homeTeam.id} abbreviation={this.state.homeTeam.abbreviation} score={this.state.homeTeamScore}/>)}\n                <p className=\"subText\">{this.state.subText}</p>\n            </div>\n        );\n      }\n}\n  export default Game"]},"metadata":{},"sourceType":"module"}