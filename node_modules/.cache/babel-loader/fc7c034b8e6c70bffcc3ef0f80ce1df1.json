{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/TMLStats 2.0/frontend/src/PlayerGroup.js\";\nimport React from \"react\";\nimport './index.css';\nimport Players from './Players.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayerGroup extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      players: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=\" + this.props.position;\n    const response = await fetch(url, {\n      headers: new Headers({\n        'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n      })\n    });\n    const data = await response.json();\n    this.setState({\n      players: data.playerStatsTotals\n    });\n  }\n\n  render() {\n    let player = this.state.players.map(function (player, i) {\n      if (player.player.currentRosterStatus === \"ROSTER\" || player.player.currentRosterStatus === \"INJURY_LIST\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: player.player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.player.officialImageSrc,\n            alt: \"\",\n            className: \"player-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-name\",\n            children: [player.player.firstName, \" \", player.player.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, player.player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this);\n      } else {\n        return \"\";\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"players\",\n      children: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlayerGroup;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/TMLStats 2.0/frontend/src/PlayerGroup.js"],"names":["React","Players","PlayerGroup","Component","constructor","props","state","players","componentDidMount","url","position","response","fetch","headers","Headers","btoa","data","json","setState","playerStatsTotals","render","player","map","i","currentRosterStatus","officialImageSrc","firstName","lastName","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AAEA,OAAOC,OAAP,MAAoB,cAApB;;;AAGA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAGtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,GAAG,GAAG,oIAAoI,KAAKJ,KAAL,CAAWK,QAA3J;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;AAC9BI,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,yBAAiB,WAASC,IAAI,CAAC,8CAAD;AADX,OAAZ;AADqB,KAAN,CAA5B;AAKA,UAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACX,MAAAA,OAAO,EAAES,IAAI,CAACG;AAAf,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,GAAnB,CAAuB,UAASD,MAAT,EAAgBE,CAAhB,EAAmB;AACnD,UAAIF,MAAM,CAACA,MAAP,CAAcG,mBAAd,KAAsC,QAAtC,IAAkDH,MAAM,CAACA,MAAP,CAAcG,mBAAd,KAAsC,aAA5F,EAA2G;AACvG,4BACI;AAA4B,UAAA,SAAS,EAAC,QAAtC;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEH,MAAM,CAACA,MAAP,CAAcI,gBAAd,IAAkC,IAAlC,GAAyC,yEAAzC,GAAqHJ,MAAM,CAACA,MAAP,CAAcI,gBAA7I;AAA+J,YAAA,GAAG,EAAC,EAAnK;AACA,YAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA,uBAA4BJ,MAAM,CAACA,MAAP,CAAcK,SAA1C,OAAsDL,MAAM,CAACA,MAAP,CAAcM,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAUN,MAAM,CAACA,MAAP,CAAcO,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH,OARD,MAUK;AACD,eAAO,EAAP;AACH;AACJ,KAdY,CAAb;AAeA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAMD;;AA3CmC;;AAgDxC,eAAenB,WAAf","sourcesContent":["import React from \"react\"\nimport './index.css'\n\nimport Players from './Players.js'\n\n\nclass PlayerGroup extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            players: []\n        }\n    }\n\n    async componentDidMount() {\n        const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster&position=\" + this.props.position\n        const response = await fetch(url, { \n            headers: new Headers({\n              'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS'), \n            }), \n        });\n        const data = await response.json();\n        this.setState({players: data.playerStatsTotals}) \n    }\n\n    render() {\n        let player = this.state.players.map(function(player,i) {\n            if (player.player.currentRosterStatus === \"ROSTER\" || player.player.currentRosterStatus === \"INJURY_LIST\") {\n                return(\n                    <div key={player.player.id} className=\"player\">\n                        <img src={player.player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.player.officialImageSrc} alt=\"\"\n                        className=\"player-img\"/>\n                        <p className=\"player-name\">{player.player.firstName} {player.player.lastName}</p>\n                    </div>\n                )\n            }\n\n            else {\n                return \"\"\n            }\n        })\n        return (\n            <div id=\"players\">\n                {player}\n            </div>\n\n        );\n      }\n\n\n}\n\n  export default PlayerGroup"]},"metadata":{},"sourceType":"module"}