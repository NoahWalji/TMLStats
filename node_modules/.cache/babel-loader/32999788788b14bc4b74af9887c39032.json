{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/TMLStats 2.0/frontend/src/Player.js\";\nimport React from \"react\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Player extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      players: []\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster\";\n    const response = await fetch(url, {\n      headers: new Headers({\n        'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n      })\n    });\n    const data = await response.json();\n    this.setState({\n      players: data.playerStatsTotals\n    });\n  }\n\n  render() {\n    let player = this.stateplayers.map(function (player, i) {\n      if (player.player.currentRosterStatus === \"ROSTER\") {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: player.player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.player.officialImageSrc,\n            alt: \"\",\n            className: \"player-img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"player-name\",\n            children: [player.player.firstName, \" \", player.player.lastName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, player.player.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this);\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"players\",\n      children: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Player;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/TMLStats 2.0/frontend/src/Player.js"],"names":["React","Player","Component","constructor","props","state","players","componentDidMount","url","response","fetch","headers","Headers","btoa","data","json","setState","playerStatsTotals","render","player","stateplayers","map","i","currentRosterStatus","officialImageSrc","firstName","lastName","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;;;AAGA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AAGjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAEsB,QAAjBC,iBAAiB,GAAG;AACtB,UAAMC,GAAG,GAAG,uHAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,EAAM;AAC9BG,MAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,yBAAiB,WAASC,IAAI,CAAC,8CAAD;AADX,OAAZ;AADqB,KAAN,CAA5B;AAKA,UAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAT,EAAnB;AACA,SAAKC,QAAL,CAAc;AAACV,MAAAA,OAAO,EAAEQ,IAAI,CAACG;AAAf,KAAd;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,MAAM,GAAG,KAAKC,YAAL,CAAkBC,GAAlB,CAAsB,UAASF,MAAT,EAAgBG,CAAhB,EAAmB;AAClD,UAAIH,MAAM,CAACA,MAAP,CAAcI,mBAAd,KAAsC,QAA1C,EAAoD;AAChD,4BACI;AAA4B,UAAA,SAAS,EAAC,QAAtC;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEJ,MAAM,CAACA,MAAP,CAAcK,gBAAd,IAAkC,IAAlC,GAAyC,yEAAzC,GAAqHL,MAAM,CAACA,MAAP,CAAcK,gBAA7I;AAA+J,YAAA,GAAG,EAAC,EAAnK;AACA,YAAA,SAAS,EAAC;AADV;AAAA;AAAA;AAAA;AAAA,kBADJ,eAGI;AAAG,YAAA,SAAS,EAAC,aAAb;AAAA,uBAA4BL,MAAM,CAACA,MAAP,CAAcM,SAA1C,OAAsDN,MAAM,CAACA,MAAP,CAAcO,QAApE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA,WAAUP,MAAM,CAACA,MAAP,CAAcQ,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADJ;AAOH;AACJ,KAVY,CAAb;AAWA,wBACI;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,gBACKR;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAMD;;AAvC8B;;AA6CnC,eAAelB,MAAf","sourcesContent":["import React from \"react\"\nimport './index.css'\n\n\nclass Player extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            players: []\n        }\n    }\n\n    async componentDidMount() {\n        const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?team=TOR&rosterstatus=assigned-to-roster\"\n        const response = await fetch(url, { \n            headers: new Headers({\n              'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS'), \n            }), \n        });\n        const data = await response.json();\n        this.setState({players: data.playerStatsTotals}) \n    }\n\n    render() {\n        let player = this.stateplayers.map(function(player,i) {\n            if (player.player.currentRosterStatus === \"ROSTER\") {\n                return(\n                    <div key={player.player.id} className=\"player\">\n                        <img src={player.player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.player.officialImageSrc} alt=\"\"\n                        className=\"player-img\"/>\n                        <p className=\"player-name\">{player.player.firstName} {player.player.lastName}</p>\n                    </div>\n                )\n            }\n        })\n        return (\n            <div id=\"players\">\n                {player}\n            </div>\n\n        );\n      }\n\n\n\n}\n\n  export default Player"]},"metadata":{},"sourceType":"module"}