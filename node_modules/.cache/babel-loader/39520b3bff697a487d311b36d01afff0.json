{"ast":null,"code":"var _jsxFileName = \"/Users/noahwalji/Desktop/TMLStats 2.0/frontend/src/PlayerDetails.js\";\nimport React from \"react\";\nimport './index.css';\nimport PlayerStatsTable from \"./PlayerStatsTable.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayerDetails extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      playerInfo: [],\n      playerStats: [],\n      playerShoots: null,\n      playerScoring: [],\n      playerSkating: [],\n      playerPenalties: [],\n      goalieStats: []\n    };\n  }\n\n  async componentDidMount() {\n    let {\n      id\n    } = this.props.match.params;\n    const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?player=\" + id;\n    const response = await fetch(url, {\n      headers: new Headers({\n        'Authorization': 'Basic ' + btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS')\n      })\n    });\n    const data = await response.json();\n    this.setState({\n      playerInfo: data.playerStatsTotals[0].player,\n      playerStats: data.playerStatsTotals[0].stats\n    });\n    this.setState({\n      playerShoots: this.state.playerInfo.handedness.shoots\n    });\n    this.setState({\n      playerScoring: this.state.playerStats.scoring\n    });\n    this.setState({\n      playerSkating: this.state.playerStats.skating\n    });\n    this.setState({\n      playerPenalties: this.state.playerStats.penalties\n    });\n  }\n\n  render() {\n    let player = this.state.playerInfo;\n    let stats = this.state.playerStats;\n    let scoring = this.state.playerScoring;\n    let skating = this.state.playerSkating;\n    let penalities = this.state.playerPenalties;\n    let table;\n\n    if (player.primaryPosition === 'G') {\n      table = /*#__PURE__*/_jsxDEV(GoalieStatsTable, {\n        position: player.primaryPosition,\n        stats: stats,\n        scoring: scoring,\n        skating: skating,\n        penalities: penalities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this);\n    } else {\n      table = /*#__PURE__*/_jsxDEV(PlayerStatsTable, {\n        position: player.primaryPosition,\n        stats: stats,\n        scoring: scoring,\n        skating: skating,\n        penalities: penalities\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.officialImageSrc,\n        alt: \"\",\n        className: \"details-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"details-title\",\n        children: [player.firstName, \" \", player.lastName, \" (#\", player.jerseyNumber, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"details-title\",\n        children: [player.primaryPosition, \" | \", player.height, \" | \", player.weight, \" lb\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Born: \", player.birthDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Birthplace: \", player.birthCity, \", \", player.birthCountry]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Shoots: \", this.state.playerShoots]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), table]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PlayerDetails;","map":{"version":3,"sources":["/Users/noahwalji/Desktop/TMLStats 2.0/frontend/src/PlayerDetails.js"],"names":["React","PlayerStatsTable","PlayerDetails","Component","constructor","props","state","playerInfo","playerStats","playerShoots","playerScoring","playerSkating","playerPenalties","goalieStats","componentDidMount","id","match","params","url","response","fetch","headers","Headers","btoa","data","json","setState","playerStatsTotals","player","stats","handedness","shoots","scoring","skating","penalties","render","penalities","table","primaryPosition","officialImageSrc","firstName","lastName","jerseyNumber","height","weight","birthDate","birthCity","birthCountry"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport './index.css'\nimport PlayerStatsTable from \"./PlayerStatsTable.js\"\n\n\nclass PlayerDetails extends React.Component {\n\n\n    constructor(props) {\n        super()\n        this.state = {\n            playerInfo: [],\n            playerStats: [],\n            playerShoots: null,\n            playerScoring: [],\n            playerSkating: [],\n            playerPenalties: [],\n            goalieStats: []\n        }\n    }\n\n    async componentDidMount() {\n        let { id } = this.props.match.params\n        const url = \"https://api.mysportsfeeds.com/v2.1/pull/nhl/current/player_stats_totals.json?player=\" + id\n        const response = await fetch(url, { \n            headers: new Headers({\n              'Authorization': 'Basic '+btoa('1e3895c7-87b5-4460-9249-8fc296:MYSPORTSFEEDS'), \n            }), \n        });\n        const data = await response.json();\n        this.setState({playerInfo: data.playerStatsTotals[0].player, playerStats: data.playerStatsTotals[0].stats}) \n        this.setState({playerShoots: this.state.playerInfo.handedness.shoots})\n        this.setState({playerScoring: this.state.playerStats.scoring})\n        this.setState({playerSkating: this.state.playerStats.skating})\n        this.setState({playerPenalties: this.state.playerStats.penalties})\n        \n    }\n\n    render() {\n        let player = this.state.playerInfo\n        let stats = this.state.playerStats\n        let scoring = this.state.playerScoring\n        let skating = this.state.playerSkating\n        let penalities = this.state.playerPenalties\n        let table;\n\n        if (player.primaryPosition === 'G') {\n            table = <GoalieStatsTable position={player.primaryPosition} stats={stats} scoring={scoring} skating={skating} penalities={penalities}/>\n        }\n\n        else {\n            table = <PlayerStatsTable position={player.primaryPosition} stats={stats} scoring={scoring} skating={skating} penalities={penalities}/>\n        }\n\n        return (\n            <div className=\"player-container\">\n                <img src={player.officialImageSrc == null ? \"https://cms.nhl.bamgrid.com/images/headshots/current/168x168/skater.jpg\" : player.officialImageSrc} alt=\"\"\n                className=\"details-img\"/>\n                <p className=\"details-title\">{player.firstName} {player.lastName} (#{player.jerseyNumber})</p>\n                <p className=\"details-title\">{player.primaryPosition} | {player.height} | {player.weight} lb</p>\n\n                <p>Born: {player.birthDate}</p>\n                <p>Birthplace: {player.birthCity}, {player.birthCountry}</p>\n                <p>Shoots: {this.state.playerShoots}</p>\n                {table}\n                \n\n                \n            </div>\n        )\n      }\n\n\n\n}\n\n  export default PlayerDetails"]},"metadata":{},"sourceType":"module"}